name: Flutter CI

on:
  push:
    branches:
      - master


jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    outputs:
      id: version-output
      values:
        VERSION_CONTENT: ${{ steps.set-version-content.outputs.VERSION_CONTENT }}
    steps:
      - uses: actions/checkout@v1
#      - name: Fetch all history for all tags and branches
#        run: |
#          git config remote.origin.url https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
#          git fetch --prune --depth=10000
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.GitVersion_FullSemVer  }} > version.txt
      - name: Capture version in version.txt
        run: |
          echo "GitVersion Output: ${{ steps.gitversion.outputs.GitVersion_FullSemVer }}"
      - name: Set version output
        run: echo "VERSION=${{ steps.gitversion.outputs.GitVersion_FullSemVer }}" >> $GITHUB_ENV
      - name: Use version in subsequent steps
        run: | 
          echo "Current Version1111: $VERSION"
      - name: Debug GitVersion Output
        run: |
          echo "GitVersion Output: ${{ steps.gitversion.outputs.GitVersion_FullSemVer }}"
      - name: Debug version.txt
        run: cat version.txt
      - name: Set version content
        id: set-version-content
        run: |
          echo "VERSION_CONTENT=$(cat version.txt)" >> $GITHUB_ENV
        shell: bash
      - name: Print GitVersion_FullSemVer
        run: |
          echo "GitVersion_FullSemVer: ${{ env.GitVersion_FullSemVer }}"
      - name: Update version in YAML
        run: |
         current_version=$(grep -oP 'version: \K[0-9]+\.[0-9]+\.[0-9]+\+[0-9]+' pubspec.yaml)
         IFS='+' read -ra version_parts <<< "$current_version"
         new_version="${version_parts[0]}+$((${version_parts[1]}+1))"
         sed -i "s/version: $current_version/version: ${{ env.GitVersion_FullSemVer }}/g" pubspec.yaml
      - name: Print pubspec.yaml
        run: cat pubspec.yaml
      - name: Upload version.txt as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: version-artifact
          path: version.txt
        if: success()
      - name: Handle error
        if: failure()
        run: | 
          echo "Workflow failed: ${{ job.status }}"
      

  build:
    name: Build APK and Create release
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download version.txt artifact
        uses: actions/download-artifact@v2
        with:
          name: version-artifact
          path: downloaded
      - name: Print version.txt content in build job
        run: | 
         echo "Content: ${{ needs.version.outputs.VERSION_CONTENT }}"
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '16.x'
#
#      - uses: subosito/flutter-action@v2
#        with:
#          flutter-version: "3.7.0"
#          channel: 'stable'
#
#      - run: flutter pub get
#      - run: flutter build apk --release
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: release-apk
#          path: build/app/outputs/flutter-apk/app-release.apk

#      - name: Create a Release in GitHub
#        uses: ncipollo/release-action@v1
#        with:
#          artifacts: "build/app/outputs/apk/release/*.apk"
#          token: ${{ secrets.TOKEN_GITHUB }}
#          tag: ${{ steps.version.outputs.content }}
#          commit: ${{ github.sha }}



